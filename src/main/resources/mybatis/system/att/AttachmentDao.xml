<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanxiu.ce.system.dao.AttachmentDao">
	
	<sql id="table"> sys_att </sql>
	<sql id="columns"> id,version,createtime,deleted,name,attid,size,contenttype,path,userid </sql>
	
	<resultMap id="attachment" type="Attachment">
		<result property="id" column="id" />
		<result property="version" column="version" />
		<result property="createTime" column="createtime" />
		<result property="deleted" column="deleted" />
		<result property="name" column="name" />
		<result property="attId" column="attid" />
		<result property="size" column="size" />
		<result property="contentType" column="contenttype" />
		<result property="path" column="path" />
		<result property="userId" column="userid" />
	</resultMap>
	
	<!--单条插入-->
	<insert id="insert" parameterType="Attachment" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table" />
		<trim prefix="(" suffix=")" suffixOverrides=",">
			version,createtime,deleted,
			<if test="name != null">name,</if>
			<if test="attId != null">attid,</if>
			<if test="size != null">size,</if>
			<if test="contentType != null">contenttype,</if>
			<if test="path != null">path,</if>
			<if test="userId != null">userid</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			0,#{createTime},#{deleted},
			<if test="name != null">#{name},</if>
			<if test="attId != null">#{attId},</if>
			<if test="size != null">#{size},</if>
			<if test="contentType != null">#{contentType},</if>
			<if test="path != null">#{path},</if>
			<if test="userId != null">#{userId}</if>
		</trim>
	</insert>
	
	<!--批量插入-->
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true">
		insert into
		<include refid="table" />
		(<include refid="columns" />)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(null,0,#{item.createTime},#{item.deleted},#{item.name},#{item.attId},#{item.size},#{item.contentType},#{item.path},#{item.userId})
		</foreach>
	</insert>
	
	<!-- 根据主键查询 -->
	<select id="selectById" parameterType="long" resultMap="attachment">
		select <include refid="columns" /> from <include refid="table" />
		where
		id=#{id}
	</select>
	
	<!--根据表名，实体的主键id 获取附件的Id集合-->
	<select id="selectFromTableById" resultType="long">
		select attid from ${tableName}
		where
		primaryid=#{primaryId}
	</select>
	
	
	<!-- 根据表名，附件attid 删除附件 -->
	<delete id="deleteFromTableByAttId">
		delete from ${tableName}
		where
		attid=#{attId}
	</delete>
	
	<!-- 根据主键批量查询 -->
	<select id="selectByIds" parameterType="java.util.List" resultMap="attachment" >
		select <include refid="columns" /> from <include refid="table" />
		where id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</select>
	
	
	<!-- 单条更新:version+1 实现乐观锁 -->
	<update id="update" parameterType="Attachment">
		update
		<include refid="table" />
		<set>
			version = #{version}+1 ,
			deleted = #{deleted},
			name = #{name},
			attid = #{attId},
			size = #{size},
			contenttype = #{contentType},
			path = #{path},
			userid = #{userId}
		</set>
		<where>
			id = #{id} and version = #{version}
		</where>
	</update>
	
	<!-- 根据id彻底删除 -->
	<delete id="deleteById" parameterType="long">
		delete from <include refid="table" />
		where
		id=#{id}
	</delete>
	
	<!-- 根据主键批量删除 -->
	<delete id="deleteByIds" parameterType="java.util.List">
		delete from <include refid="table" />
		where
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</delete>
	
	<!--片段list字段查询器-->
	<sql id="selectorFields">
		select
		<if test="fields != null">
			${fields}
		</if>
		<if test="fields == null">
			<include refid="columns" />
		</if>
		from  <include refid="table" />
	</sql>
	
	<!--片段list条件判断-->
	<sql id="selectorWhere">
		<where>
			<if test="deleted != null and deleted !=''"> and deleted=#{deleted}</if>
			<if test="name != null and name !=''"> 
				<if test="nameLike == false"> and name=#{name}</if>
				<if test="nameLike == true"> and name like  CONCAT('%',#{name},'%')</if>
			</if>
			<if test="attId != null and attId !=''"> 
				<if test="attIdLike == false"> and attid=#{attId}</if>
				<if test="attIdLike == true"> and attid like  CONCAT('%',#{attId},'%')</if>
			</if>
			<if test="size != null and size !=''"> 
				<if test="sizeLike == false"> and size=#{size}</if>
				<if test="sizeLike == true"> and size like  CONCAT('%',#{size},'%')</if>
			</if>
			<if test="contentType != null and contentType !=''"> 
				<if test="contentTypeLike == false"> and contenttype=#{contentType}</if>
				<if test="contentTypeLike == true"> and contenttype like  CONCAT('%',#{contentType},'%')</if>
			</if>
			<if test="path != null and path !=''"> 
				<if test="pathLike == false"> and path=#{path}</if>
				<if test="pathLike == true"> and path like  CONCAT('%',#{path},'%')</if>
			</if>
			<if test="userId != null and userId !=''"> 
				<if test="userIdLike == false"> and userid=#{userId}</if>
				<if test="userIdLike == true"> and userid like  CONCAT('%',#{userId},'%')</if>
			</if>
			<!--<if test="startTime != null"> and birthday <![CDATA[   >=  ]]>#{startTime} </if>
			<if test="endTime != null"> and  birthday <![CDATA[   <  ]]> #{endTime}</if>
			-->
		</where>
	</sql>
	
	<!--片段list排序-->
	<sql id="selectorOrder">
		<if test="orderFields != null and orderFields.size >0">
			order by
			<foreach collection="orderFields" separator="," item="orderField">
				${orderField.fieldName} ${orderField.order}
			</foreach>
		</if>
	</sql>
	
	<!--片段list分页-->
	<sql id="selectorLimit">
		<if test="startRow != null">
			limit  #{startRow},#{pageSize}
		</if>
	</sql>
	
	<!--查询所有记录-->
	<select id="selectList" parameterType="AttachmentQuery" resultMap="attachment">
		<include refid="selectorFields" />
		<include refid="selectorWhere" />
		<include refid="selectorOrder" />
	</select>
	
	<!-- 分页 -->
	<select id="selectListPage" parameterType="AttachmentQuery" resultMap="attachment">
		<include refid="selectorFields" />
		<include refid="selectorWhere" />
		<include refid="selectorOrder" />
		<include refid="selectorLimit" />
	</select>
	
	<!--总条数-->
	<select id="selectListTotal" parameterType="AttachmentQuery" resultType="long">
		select count(1) from <include refid="table" />
		<include refid="selectorWhere" />
	</select>
	
	<!--///////////////////////////////自定义/////////////////////////-->
	<!--获取最大排序号-->
	<select id="selectMaxSeq" resultType="int">
		select max(seq) from <include refid="table" />
	</select>
	
	<!--校验Name是否存在-->
	<select id="selectCheckNameExit" resultType="long">
		select count(1) from <include refid="table" />
		<where>
			<if test="name != null and  name !=''"> and name=#{name}</if>
			<if test="id != null and  id !=''"> and id!=#{id}</if>
		</where>
	</select>
</mapper>