<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanxiu.ce.core.basic.dao.TeacherEduDao">
	
	<sql id="table"> t_tch_edu </sql>
	<sql id="columns"> id,version,createtime,deleted,tid,degree,major,univ,teachedday,workedday,stage,course,grade,jobStatus,memo </sql>
	
	<resultMap id="teacherEdu" type="TeacherEdu">
		<result property="id" column="id" />
		<result property="version" column="version" />
		<result property="createTime" column="createtime" />
		<result property="deleted" column="deleted" />
		<result property="tid" column="tid" />
		<result property="degree" column="degree" />
		<result property="major" column="major" />
		<result property="univ" column="univ" />
		<result property="teachedDay" column="teachedday" />
		<result property="workedDay" column="workedday" />
		<result property="stage" column="stage" />
		<result property="course" column="course" />
		<result property="grade" column="grade" />
		<result property="jobStatus" column="jobStatus" />
		<result property="memo" column="memo" />
	</resultMap>
	
	<!--单条插入-->
	<insert id="insert" parameterType="TeacherEdu" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table" />
		<trim prefix="(" suffix=")" suffixOverrides=",">
			version,createtime,deleted,
			<if test="tid != null">tid,</if>
			<if test="degree != null">degree,</if>
			<if test="major != null">major,</if>
			<if test="univ != null">univ,</if>
			<if test="teachedDay != null">teachedday,</if>
			<if test="workedDay != null">workedday,</if>
			<if test="stage != null">stage,</if>
			<if test="course != null">course,</if>
			<if test="grade != null">grade,</if>
			<if test="jobStatus != null">jobStatus,</if>
			<if test="memo != null">memo</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			0,#{createTime},#{deleted},
			<if test="tid != null">#{tid},</if>
			<if test="degree != null">#{degree},</if>
			<if test="major != null">#{major},</if>
			<if test="univ != null">#{univ},</if>
			<if test="teachedDay != null">#{teachedDay},</if>
			<if test="workedDay != null">#{workedDay},</if>
			<if test="stage != null">#{stage},</if>
			<if test="course != null">#{course},</if>
			<if test="grade != null">#{grade},</if>
			<if test="jobStatus != null">#{jobStatus},</if>
			<if test="memo != null">#{memo}</if>
		</trim>
	</insert>
	
	<!--批量插入-->
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true">
		insert into
		<include refid="table" />
		(<include refid="columns" />)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(null,0,#{item.createTime},#{item.deleted},#{item.tid},#{item.degree},#{item.major},#{item.univ},#{item.teachedDay},#{item.workedDay},#{item.stage},#{item.course},#{item.grade},#{item.jobStatus},#{item.memo})
		</foreach>
	</insert>
	
	<!-- 根据主键查询 -->
	<select id="selectById" parameterType="long" resultMap="teacherEdu">
		select <include refid="columns" /> from <include refid="table" />
		where
		id=#{id}
	</select>
	
	<!-- 根据tid查询 -->
	<select id="selectByTid" parameterType="long" resultMap="teacherEdu">
		select <include refid="columns" /> from <include refid="table" />
		where
		tid=#{tid}
	</select>
	
	<!-- 根据主键批量查询 -->
	<select id="selectByIds" parameterType="java.util.List" resultMap="teacherEdu" >
		select <include refid="columns" /> from <include refid="table" />
		where id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</select>
	
	
	<!-- 单条更新:version+1 实现乐观锁 -->
	<update id="update" parameterType="TeacherEdu">
		update
		<include refid="table" />
		<set>
			version = #{version}+1 ,
			deleted = #{deleted},
			tid = #{tid},
			degree = #{degree},
			major = #{major},
			univ = #{univ},
			teachedday = #{teachedDay},
			workedday = #{workedDay},
			stage = #{stage},
			course = #{course},
			grade = #{grade},
			jobStatus = #{jobStatus},
			memo = #{memo}
		</set>
		<where>
			id = #{id} and version = #{version}
		</where>
	</update>
	
	<!-- 根据id彻底删除 -->
	<delete id="deleteById" parameterType="long">
		delete from <include refid="table" />
		where
		id=#{id}
	</delete>
	
	<!-- 根据主键批量删除 -->
	<delete id="deleteByIds" parameterType="java.util.List">
		delete from <include refid="table" />
		where
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</delete>
	
	<!--片段list字段查询器-->
	<sql id="selectorFields">
		select
		<if test="fields != null">
			${fields}
		</if>
		<if test="fields == null">
			<include refid="columns" />
		</if>
		from  <include refid="table" />
	</sql>
	
	<!--片段list条件判断-->
	<sql id="selectorWhere">
		<where>
			<if test="deleted != null and deleted !=''"> and deleted=#{deleted}</if>
			<if test="tid != null and tid !=''"> 
				<if test="tidLike == false"> and tid=#{tid}</if>
				<if test="tidLike == true"> and tid like  CONCAT('%',#{tid},'%')</if>
			</if>
			<if test="degree != null and degree !=''"> 
				<if test="degreeLike == false"> and degree=#{degree}</if>
				<if test="degreeLike == true"> and degree like  CONCAT('%',#{degree},'%')</if>
			</if>
			<if test="major != null and major !=''"> 
				<if test="majorLike == false"> and major=#{major}</if>
				<if test="majorLike == true"> and major like  CONCAT('%',#{major},'%')</if>
			</if>
			<if test="univ != null and univ !=''"> 
				<if test="univLike == false"> and univ=#{univ}</if>
				<if test="univLike == true"> and univ like  CONCAT('%',#{univ},'%')</if>
			</if>
			<if test="teachedDay != null and teachedDay !=''"> 
				<if test="teachedDayLike == false"> and teachedday=#{teachedDay}</if>
				<if test="teachedDayLike == true"> and teachedday like  CONCAT('%',#{teachedDay},'%')</if>
			</if>
			<if test="workedDay != null and workedDay !=''"> 
				<if test="workedDayLike == false"> and workedday=#{workedDay}</if>
				<if test="workedDayLike == true"> and workedday like  CONCAT('%',#{workedDay},'%')</if>
			</if>
			<if test="stage != null and stage !=''"> 
				<if test="stageLike == false"> and stage=#{stage}</if>
				<if test="stageLike == true"> and stage like  CONCAT('%',#{stage},'%')</if>
			</if>
			<if test="course != null and course !=''"> 
				<if test="courseLike == false"> and course=#{course}</if>
				<if test="courseLike == true"> and course like  CONCAT('%',#{course},'%')</if>
			</if>
			<if test="grade != null and grade !=''"> 
				<if test="gradeLike == false"> and grade=#{grade}</if>
				<if test="gradeLike == true"> and grade like  CONCAT('%',#{grade},'%')</if>
			</if>
			<if test="jobStatus != null and jobStatus !=''"> 
				<if test="jobStatusLike == false"> and jobStatus=#{jobStatus}</if>
				<if test="jobStatusLike == true"> and jobStatus like  CONCAT('%',#{jobStatus},'%')</if>
			</if>
			<if test="memo != null and memo !=''"> 
				<if test="memoLike == false"> and memo=#{memo}</if>
				<if test="memoLike == true"> and memo like  CONCAT('%',#{memo},'%')</if>
			</if>
			<!--<if test="startTime != null"> and birthday <![CDATA[   >=  ]]>#{startTime} </if>
			<if test="endTime != null"> and  birthday <![CDATA[   <  ]]> #{endTime}</if>
			-->
		</where>
	</sql>
	
	<!--片段list排序-->
	<sql id="selectorOrder">
		<if test="orderFields != null and orderFields.size >0">
			order by
			<foreach collection="orderFields" separator="," item="orderField">
				${orderField.fieldName} ${orderField.order}
			</foreach>
		</if>
	</sql>
	
	<!--片段list分页-->
	<sql id="selectorLimit">
		<if test="startRow != null">
			limit  #{startRow},#{pageSize}
		</if>
	</sql>
	
	<!--查询所有记录-->
	<select id="selectList" parameterType="TeacherEduQuery" resultMap="teacherEdu">
		<include refid="selectorFields" />
		<include refid="selectorWhere" />
		<include refid="selectorOrder" />
	</select>
	
	<!-- 分页 -->
	<select id="selectListPage" parameterType="TeacherEduQuery" resultMap="teacherEdu">
		<include refid="selectorFields" />
		<include refid="selectorWhere" />
		<include refid="selectorOrder" />
		<include refid="selectorLimit" />
	</select>
	
	<!--总条数-->
	<select id="selectListTotal" parameterType="TeacherEduQuery" resultType="long">
		select count(1) from <include refid="table" />
		<include refid="selectorWhere" />
	</select>
	
	<!--///////////////////////////////自定义/////////////////////////-->
	<!--获取最大排序号-->
	<select id="selectMaxSeq" resultType="int">
		select max(seq) from <include refid="table" />
	</select>
	
	<!--校验Name是否存在-->
	<select id="selectCheckNameExit" resultType="long">
		select count(1) from <include refid="table" />
		<where>
			<if test="name != null and  name !=''"> and name=#{name}</if>
			<if test="id != null and  id !=''"> and id!=#{id}</if>
		</where>
	</select>
</mapper>