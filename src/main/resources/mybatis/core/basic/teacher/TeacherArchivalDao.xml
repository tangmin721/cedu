<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanxiu.ce.core.basic.dao.TeacherArchivalDao">
	
	<sql id="table"> t_tch_archival </sql>
	<sql id="columns"> id,version,createtime,deleted,tid,persontype,duty,title,qualify,bonetype,joblevel,politic,joinday,memo </sql>
	
	<resultMap id="teacherArchival" type="TeacherArchival">
		<result property="id" column="id" />
		<result property="version" column="version" />
		<result property="createTime" column="createtime" />
		<result property="deleted" column="deleted" />
		<result property="tid" column="tid" />
		<result property="personType" column="persontype" />
		<result property="duty" column="duty" />
		<result property="title" column="title" />
		<result property="qualify" column="qualify" />
		<result property="boneType" column="bonetype" />
		<result property="jobLevel" column="joblevel" />
		<result property="politic" column="politic" />
		<result property="joinDay" column="joinday" />
		<result property="memo" column="memo" />
	</resultMap>
	
	<!--单条插入-->
	<insert id="insert" parameterType="TeacherArchival" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table" />
		<trim prefix="(" suffix=")" suffixOverrides=",">
			version,createtime,deleted,
			<if test="tid != null">tid,</if>
			<if test="personType != null">persontype,</if>
			<if test="duty != null">duty,</if>
			<if test="title != null">title,</if>
			<if test="qualify != null">qualify,</if>
			<if test="boneType != null">bonetype,</if>
			<if test="jobLevel != null">joblevel,</if>
			<if test="politic != null">politic,</if>
			<if test="joinDay != null">joinday,</if>
			<if test="memo != null">memo</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			0,#{createTime},#{deleted},
			<if test="tid != null">#{tid},</if>
			<if test="personType != null">#{personType},</if>
			<if test="duty != null">#{duty},</if>
			<if test="title != null">#{title},</if>
			<if test="qualify != null">#{qualify},</if>
			<if test="boneType != null">#{boneType},</if>
			<if test="jobLevel != null">#{jobLevel},</if>
			<if test="politic != null">#{politic},</if>
			<if test="joinDay != null">#{joinDay},</if>
			<if test="memo != null">#{memo}</if>
		</trim>
	</insert>
	
	<!--批量插入-->
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true">
		insert into
		<include refid="table" />
		(<include refid="columns" />)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(null,0,#{item.createTime},#{item.deleted},#{item.tid},#{item.personType},#{item.duty},#{item.title},#{item.qualify},#{item.boneType},#{item.jobLevel},#{item.politic},#{item.joinDay},#{item.memo})
		</foreach>
	</insert>
	
	<!-- 根据主键查询 -->
	<select id="selectById" parameterType="long" resultMap="teacherArchival">
		select <include refid="columns" /> from <include refid="table" />
		where
		id=#{id}
	</select>
	
	<!-- 根据主键查询 -->
	<select id="selectByTid" parameterType="long" resultMap="teacherArchival">
		select <include refid="columns" /> from <include refid="table" />
		where
		tid=#{tid}
	</select>
	
	
	<!-- 根据主键批量查询 -->
	<select id="selectByIds" parameterType="java.util.List" resultMap="teacherArchival" >
		select <include refid="columns" /> from <include refid="table" />
		where id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</select>
	
	
	<!-- 单条更新:version+1 实现乐观锁 -->
	<update id="update" parameterType="TeacherArchival">
		update
		<include refid="table" />
		<set>
			version = #{version}+1 ,
			deleted = #{deleted},
			tid = #{tid},
			persontype = #{personType},
			duty = #{duty},
			title = #{title},
			qualify = #{qualify},
			bonetype = #{boneType},
			joblevel = #{jobLevel},
			politic = #{politic},
			joinday = #{joinDay},
			memo = #{memo}
		</set>
		<where>
			id = #{id} and version = #{version}
		</where>
	</update>
	
	<!-- 根据id彻底删除 -->
	<delete id="deleteById" parameterType="long">
		delete from <include refid="table" />
		where
		id=#{id}
	</delete>
	
	<!-- 根据主键批量删除 -->
	<delete id="deleteByIds" parameterType="java.util.List">
		delete from <include refid="table" />
		where
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</delete>
	
	<!--片段list字段查询器-->
	<sql id="selectorFields">
		select
		<if test="fields != null">
			${fields}
		</if>
		<if test="fields == null">
			<include refid="columns" />
		</if>
		from  <include refid="table" />
	</sql>
	
	<!--片段list条件判断-->
	<sql id="selectorWhere">
		<where>
			<if test="deleted != null and deleted !=''"> and deleted=#{deleted}</if>
			<if test="tid != null and tid !=''"> 
				<if test="tidLike == false"> and tid=#{tid}</if>
				<if test="tidLike == true"> and tid like  CONCAT('%',#{tid},'%')</if>
			</if>
			<if test="personType != null and personType !=''"> 
				<if test="personTypeLike == false"> and persontype=#{personType}</if>
				<if test="personTypeLike == true"> and persontype like  CONCAT('%',#{personType},'%')</if>
			</if>
			<if test="duty != null and duty !=''"> 
				<if test="dutyLike == false"> and duty=#{duty}</if>
				<if test="dutyLike == true"> and duty like  CONCAT('%',#{duty},'%')</if>
			</if>
			<if test="title != null and title !=''"> 
				<if test="titleLike == false"> and title=#{title}</if>
				<if test="titleLike == true"> and title like  CONCAT('%',#{title},'%')</if>
			</if>
			<if test="qualify != null and qualify !=''"> 
				<if test="qualifyLike == false"> and qualify=#{qualify}</if>
				<if test="qualifyLike == true"> and qualify like  CONCAT('%',#{qualify},'%')</if>
			</if>
			<if test="boneType != null and boneType !=''"> 
				<if test="boneTypeLike == false"> and bonetype=#{boneType}</if>
				<if test="boneTypeLike == true"> and bonetype like  CONCAT('%',#{boneType},'%')</if>
			</if>
			<if test="jobLevel != null and jobLevel !=''"> 
				<if test="jobLevelLike == false"> and joblevel=#{jobLevel}</if>
				<if test="jobLevelLike == true"> and joblevel like  CONCAT('%',#{jobLevel},'%')</if>
			</if>
			<if test="politic != null and politic !=''"> 
				<if test="politicLike == false"> and politic=#{politic}</if>
				<if test="politicLike == true"> and politic like  CONCAT('%',#{politic},'%')</if>
			</if>
			<if test="joinDay != null and joinDay !=''"> 
				<if test="joinDayLike == false"> and joinday=#{joinDay}</if>
				<if test="joinDayLike == true"> and joinday like  CONCAT('%',#{joinDay},'%')</if>
			</if>
			<if test="memo != null and memo !=''"> 
				<if test="memoLike == false"> and memo=#{memo}</if>
				<if test="memoLike == true"> and memo like  CONCAT('%',#{memo},'%')</if>
			</if>
			<!--<if test="startTime != null"> and birthday <![CDATA[   >=  ]]>#{startTime} </if>
			<if test="endTime != null"> and  birthday <![CDATA[   <  ]]> #{endTime}</if>
			-->
		</where>
	</sql>
	
	<!--片段list排序-->
	<sql id="selectorOrder">
		<if test="orderFields != null and orderFields.size >0">
			order by
			<foreach collection="orderFields" separator="," item="orderField">
				${orderField.fieldName} ${orderField.order}
			</foreach>
		</if>
	</sql>
	
	<!--片段list分页-->
	<sql id="selectorLimit">
		<if test="startRow != null">
			limit  #{startRow},#{pageSize}
		</if>
	</sql>
	
	<!--查询所有记录-->
	<select id="selectList" parameterType="TeacherArchivalQuery" resultMap="teacherArchival">
		<include refid="selectorFields" />
		<include refid="selectorWhere" />
		<include refid="selectorOrder" />
	</select>
	
	<!-- 分页 -->
	<select id="selectListPage" parameterType="TeacherArchivalQuery" resultMap="teacherArchival">
		<include refid="selectorFields" />
		<include refid="selectorWhere" />
		<include refid="selectorOrder" />
		<include refid="selectorLimit" />
	</select>
	
	<!--总条数-->
	<select id="selectListTotal" parameterType="TeacherArchivalQuery" resultType="long">
		select count(1) from <include refid="table" />
		<include refid="selectorWhere" />
	</select>
	
	<!--///////////////////////////////自定义/////////////////////////-->
	<!--获取最大排序号-->
	<select id="selectMaxSeq" resultType="int">
		select max(seq) from <include refid="table" />
	</select>
	
	<!--校验Name是否存在-->
	<select id="selectCheckNameExit" resultType="long">
		select count(1) from <include refid="table" />
		<where>
			<if test="name != null and  name !=''"> and name=#{name}</if>
			<if test="id != null and  id !=''"> and id!=#{id}</if>
		</where>
	</select>
	
	<!--根据tid批量删除-->
	<delete id="deleteByTid" parameterType="long">
		delete from <include refid="table" /> where tid = #{tid}
	</delete>
</mapper>