<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanxiu.ce.core.basic.dao.CourseDao">
	
	<sql id="table"> t_conf_course </sql>
	<sql id="columns"> id,version,createtime,deleted,seq,stageid,name,code,memo </sql>
	
	<sql id="listcolumns"> o.*,s.name as stagename </sql>
	
	<resultMap id="course" type="Course">
		<result property="id" column="id" />
		<result property="version" column="version" />
		<result property="createTime" column="createtime" />
		<result property="deleted" column="deleted" />
		<result property="seq" column="seq" />
		<result property="stageId" column="stageid" />
		<result property="stageName" column="stagename" />
		<result property="name" column="name" />
		<result property="code" column="code" />
		<result property="memo" column="memo" />
	</resultMap>
	
	<!--单条插入-->
	<insert id="insert" parameterType="Course" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="table" />
		<trim prefix="(" suffix=")" suffixOverrides=",">
			version,createtime,deleted,
			<if test="seq != null">seq,</if>
			<if test="stageId != null">stageid,</if>
			<if test="name != null">name,</if>
			<if test="code != null">code,</if>
			<if test="memo != null">memo</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			0,#{createTime},#{deleted},
			<if test="seq != null">#{seq},</if>
			<if test="stageId != null">#{stageId},</if>
			<if test="name != null">#{name},</if>
			<if test="code != null">#{code},</if>
			<if test="memo != null">#{memo}</if>
		</trim>
	</insert>
	
	<!--批量插入-->
	<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true">
		insert into
		<include refid="table" />
		(<include refid="columns" />)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(null,0,#{item.createTime},#{item.deleted},#{item.seq},#{item.stageId},#{item.name},#{item.code},#{item.memo})
		</foreach>
	</insert>
	
	<!-- 根据主键查询 -->
	<select id="selectById" parameterType="long" resultMap="course">
		select <include refid="columns" /> from <include refid="table" />
		where
		id=#{id}
	</select>
	
	<!-- 根据主键批量查询 -->
	<select id="selectByIds" parameterType="java.util.List" resultMap="course" >
		select <include refid="columns" /> from <include refid="table" />
		where id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</select>
	
	
	<!-- 单条更新:version+1 实现乐观锁 -->
	<update id="update" parameterType="Course">
		update
		<include refid="table" />
		<set>
			version = #{version}+1 ,
			deleted = #{deleted},
			seq = #{seq},
			stageid = #{stageId},
			name = #{name},
			code = #{code},
			memo = #{memo}
		</set>
		<where>
			id = #{id} and version = #{version}
		</where>
	</update>
	
	<!-- 根据id彻底删除 -->
	<delete id="deleteById" parameterType="long">
		delete from <include refid="table" />
		where
		id=#{id}
	</delete>
	
	<!-- 根据StageId彻底删除 -->
	<delete id="deleteByStageId" parameterType="long">
		delete from <include refid="table" />
		where
		stageid=#{stageId}
	</delete>
	
	
	<!-- 根据主键批量删除 -->
	<delete id="deleteByIds" parameterType="java.util.List">
		delete from <include refid="table" />
		where
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</delete>
	
	<!--片段list字段查询器-->
	<sql id="selectorFields">
		select
		<if test="fields != null">
			${fields}
		</if>
		<if test="fields == null">
			<include refid="columns" />
		</if>
		from  <include refid="table" /> o
	</sql>
	
	<!--片段list字段查询器 ，仅供多表关联名称-->
	<sql id="selectorFieldsForPage">
		select
		<if test="fields != null">
			${fields}
		</if>
		<if test="fields == null">
			<include refid="listcolumns" />
		</if>
		from  <include refid="table" /> o
		LEFT JOIN t_conf_stage s ON o.stageid=s.id
	</sql>
	
	<!--片段list条件判断-->
	<sql id="selectorWhere">
		<where>
			<if test="deleted != null and deleted !=''"> and o.deleted=#{deleted}</if>
			<if test="seq != null and seq !=''"> 
				<if test="seqLike == false"> and o.seq=#{seq}</if>
				<if test="seqLike == true"> and o.seq like  CONCAT('%',#{seq},'%')</if>
			</if>
			<if test="stageId != null and stageId !=''"> 
				<if test="stageIdLike == false"> and o.stageid=#{stageId}</if>
				<if test="stageIdLike == true"> and o.stageid like  CONCAT('%',#{stageId},'%')</if>
			</if>
			<if test="name != null and name !=''"> 
				<if test="nameLike == false"> and o.name=#{name}</if>
				<if test="nameLike == true"> and o.name like  CONCAT('%',#{name},'%')</if>
			</if>
			<if test="code != null and code !=''"> 
				<if test="codeLike == false"> and o.code=#{code}</if>
				<if test="codeLike == true"> and o.code like  CONCAT('%',#{code},'%')</if>
			</if>
			<if test="memo != null and memo !=''"> 
				<if test="memoLike == false"> and o.memo=#{memo}</if>
				<if test="memoLike == true"> and o.memo like  CONCAT('%',#{memo},'%')</if>
			</if>
			<!--<if test="startTime != null"> and birthday <![CDATA[   >=  ]]>#{startTime} </if>
			<if test="endTime != null"> and  birthday <![CDATA[   <  ]]> #{endTime}</if>
			-->
		</where>
	</sql>
	
	<!--片段list排序-->
	<sql id="selectorOrder">
		<if test="orderFields != null and orderFields.size >0">
			order by
			<foreach collection="orderFields" separator="," item="orderField">
				o.${orderField.fieldName} ${orderField.order}
			</foreach>
		</if>
	</sql>
	
	<!--片段list分页-->
	<sql id="selectorLimit">
		<if test="startRow != null">
			limit  #{startRow},#{pageSize}
		</if>
	</sql>
	
	<!--查询所有记录-->
	<select id="selectList" parameterType="CourseQuery" resultMap="course">
		<include refid="selectorFields" />
		<include refid="selectorWhere" />
		<include refid="selectorOrder" />
	</select>
	
	<!-- 分页 -->
	<select id="selectListPage" parameterType="CourseQuery" resultMap="course">
		<include refid="selectorFieldsForPage" />
		<include refid="selectorWhere" />
		<include refid="selectorOrder" />
		<include refid="selectorLimit" />
	</select>
	
	<!--总条数-->
	<select id="selectListTotal" parameterType="CourseQuery" resultType="long">
		select count(1) from <include refid="table" /> o
		<include refid="selectorWhere" />
	</select>
	
	<!--///////////////////////////////自定义/////////////////////////-->
	<!--获取最大排序号-->
	<select id="selectMaxSeq" resultType="int">
		select max(seq) from <include refid="table" />
	</select>
	
	<!--校验Name是否存在-->
	<select id="selectCheckNameExit" resultType="long">
		select count(1) from <include refid="table" />
		<where>
			<if test="name != null and  name !=''"> and name=#{name}</if>
			<if test="stageId != null and  stageId !=''"> and stageid=#{stageId}</if>
			<if test="id != null and  id !=''"> and id!=#{id}</if>
		</where>
	</select>
</mapper>