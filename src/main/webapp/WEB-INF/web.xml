<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
		http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>Archetype Created Web Application</display-name>
	<!-- Spring ApplicationContext配置文件的路径,覆盖默认的applicationcontext.xml可使用通配符，用于后面的Spring Context Loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:application-context.xml</param-value>
	</context-param>

	<!-- spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- druid 数据源，用于采集 web-jdbc 关联监控的数据 -->
	<!-- 具体参考官网：https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_%E9%85%8D%E7%BD%AEWebStatFilter-->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
		<init-param>
			<param-name>profileEnable</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- form参数中文过滤器 -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- springmvc配置 DispatcherServlet -->
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!--展示Druid的统计信息-->
	<!--具体可以看官网信息：https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE-->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<!--访问路径eg：http://localhost:8080/druid/index.html -->
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
	
	<!--帆软报表
	<servlet>  
	    <servlet-name>ReportServer</servlet-name>  
	    <servlet-class>com.fr.web.ReportServlet</servlet-class>  
	    <load-on-startup>0</load-on-startup>  
	</servlet>  
	<servlet-mapping>  
	    <servlet-name>ReportServer</servlet-name>  
	    <url-pattern>/ReportServer</url-pattern>  
	</servlet-mapping>-->
	
	<!-- 配置REST的HiddenHttpMethodFileter。使form表单能把POST请求转化为PUT,DELETE请求 -->
	<!-- Rest风格 浏览器只支持GET POST请求，通过这个过滤器，可以将POST请求 转换DELETE,PUT请求 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Shiro filter start -->
	<!-- 通过代理模式将spring容器中的bean和filter关联起来 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
		<!-- 设置true由servlet控制filter的生命周期 -->
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- 设置spring容器的filter的bean  id，如果不设置则找与filter-nam一致的 bean -->
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>shiroFilter</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Shiro filter end -->
	
  	<error-page>
	    <error-code>400</error-code>
	    <location>/static/error/400.html</location>
	 </error-page>
	 <error-page>
	    <error-code>401</error-code>
	    <location>/static/error/401.html</location>
	 </error-page>
	 <error-page>
	    <error-code>402</error-code>
	    <location>/static/error/402.html</location>
	 </error-page><error-page>
	    <error-code>403</error-code>
	    <location>/static//error/403.html</location>
	 </error-page>
	 <error-page>
	    <error-code>404</error-code>
	    <location>/static/error/404.html</location>
	 </error-page>
	 <error-page>
	    <error-code>500</error-code>
	    <location>/static/error/500.html</location>
	 </error-page>
</web-app>
